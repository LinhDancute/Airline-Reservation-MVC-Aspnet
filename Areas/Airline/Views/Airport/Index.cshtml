@model IEnumerable<App.Models.Airline.Airport>
@using App.Models.Airline

@{
    ViewData["Title"] = "Danh sách sân bay";
}

<h1>@ViewData["Title"]</h1>
<p>
    <a asp-action="Create" class="btn btn-primary">Tạo sân bay mới</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().AirportName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Abbreviation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Classification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            await RenderAirport(item, 0);
        }

    </tbody>
    
</table>

@{
    async Task RenderAirport(Airport item, int level)
    {
        if (item is null)
        {
            throw new ArgumentNullException(nameof(item));
        }

        string prefix = string.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", level));
        <tr>
            <td>
                @Html.Raw(prefix)
                <a asp-action="Edit" asp-route-id="@item.AirportId">
                    @Html.DisplayFor(modelItem => item.AirportName)
                </a>
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Abbreviation)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Classification)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>

            <td>
                <a asp-action="Details" asp-route-id="@item.AirportId">Chi tiết</a> |
                <a asp-action="Delete" asp-route-id="@item.AirportId">Xóa</a>
            </td>
        </tr>
    }
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
