@model IEnumerable<App.Models.Airline.BoardingPass>

@using App.Models.Airline

@{
    ViewData["Title"] = "Danh sách phiếu đặt chỗ";
}

<h1>@ViewData["Title"]</h1>
<div class="mb-2">
    <a class="btn btn-primary" asp-action="Create" asp-controller="Flight">Tạo phiếu đặt chỗ</a>
    <a class="btn btn-secondary" asp-action="Index" asp-controller="FlightRoute">Quản lý hóa đơn</a>
</div>
<p>Tổng số phiếu đặt chỗ: 0</p>
<table class="table">
    <thead>
        <tr>
            <th>Ngày đặt</th>
            <th>CMND</th>
            <th>Ghế</th>
            <th>Tác vụ</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            await RenderBoardingPass(item, 0);
        }
    </tbody>  
</table>
@{
    async Task RenderBoardingPass(BoardingPass item, int level)
    {
        if (item is null)
        {
            throw new ArgumentNullException(nameof(item));
        }

        string prefix = string.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", level));
        <tr>
            <td>@item.BookingDate.ToShortDateString()</td>

            <td>
                @Html.Raw(prefix)
                <a asp-action="Edit" asp-route-id="@item.BoardingPassId">
                    @Html.DisplayFor(modelItem => item.CMND)
                </a>
            </td>

            <td>
                @Html.Raw(prefix)
                <a asp-action="Edit" asp-route-id="@item.BoardingPassId">
                    @Html.DisplayFor(modelItem => item.Seat)
                </a>
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.BoardingPassId">Chi tiết</a> |
                <a asp-action="Delete" asp-route-id="@item.BoardingPassId">Xóa</a>
            </td>
        </tr>
    }
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

